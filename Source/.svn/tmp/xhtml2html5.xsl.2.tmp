<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
                xmlns:html="http://www.w3.org/1999/xhtml" 
                version="1.0"
                xmlns="http://www.w3.org/1999/xhtml"
                exclude-result-prefixes="html">

	<xsl:output method="xml" 
				encoding="utf-8" 
				omit-xml-declaration="yes" 
				indent="yes"/>



	<!-- NOTES:
	Please use 4 spaces for tabs, comment new templates and keep the style
		overally nice and clean.
	Use Skype or Google Code To-do to keep everybody on track with what you're
		working on
	-->



	<!-- Add correct doctype -->
   	<xsl:variable name="doctype">
    	<xsl:text>&lt;!DOCTYPE html&gt;</xsl:text>
   	</xsl:variable>
	<xsl:template match="/">
       <xsl:value-of select="$doctype" disable-output-escaping="yes"/>
       <xsl:apply-templates select="node()"/>
   </xsl:template>    
   
   <xsl:template match="html:head">
    <xsl:element name="head"> 
      <xsl:apply-templates />  
      <xsl:element name="link">
        <xsl:attribute name="rel">stylesheet</xsl:attribute>
        <xsl:attribute name="href">css/base.css</xsl:attribute>
      </xsl:element>    
    </xsl:element>
   </xsl:template>



	<!-- Copy all nodes recursively and apply templates -->
	<xsl:template match="@*|node()">
		<xsl:copy>
			<xsl:apply-templates select="@*|node()"/>
		</xsl:copy>
	</xsl:template>



	<!-- SOON TO BE FIXED  Changes doctype.css to base.css  -->
	<xsl:template match="@href">
       	<xsl:attribute name="href">
		    <xsl:value-of select="'css/base.css'"/>
		  </xsl:attribute>	
   </xsl:template>



   <!-- Changing div class='header' to <header> -->
   <xsl:template match="html:div[@class='header']" priority="1">
       <xsl:element name="header">
	    	<xsl:apply-templates select="@*|node()"/>
	  </xsl:element>
   </xsl:template>

   <!-- Changing div class='nav' to <nav> -->
   <xsl:template match="html:div[@class='nav']" priority="1">
       <xsl:element name="nav">
           <xsl:apply-templates select="* | text()"/>
       </xsl:element>
   </xsl:template>

   <!-- Changing div class='article' to <article> -->
   <xsl:template match="html:div[@class='article']" priority="1">
       <xsl:element name="article">
           <xsl:apply-templates select="* | text()"/>
       </xsl:element>
   </xsl:template>

   <!-- Changing div class='section' to <section> -->
   <xsl:template match="html:div[@class='section']" priority="1">
       <xsl:element name="section">
           <xsl:apply-templates select="* | text()"/>
       </xsl:element>
   </xsl:template>

   <!-- Changing div class='aside' to <aside> -->
   <xsl:template match="html:div[@class='aside']" priority="1">
       <xsl:element name="aside">
           <xsl:apply-templates select="* | text()"/>
       </xsl:element>
   </xsl:template>

   <!-- Changing div class='footer' to <footer> -->
   <xsl:template match="html:div[@class='footer']" priority="1">
       <xsl:element name="footer">
           <xsl:apply-templates select="* | text()"/>
       </xsl:element>
   </xsl:template>



	<!-- DL/DT/DD fixes -->
  	<xsl:template match="html:dl">
      <xsl:element name="ul">
        <xsl:apply-templates select="* | text()"/> 
      </xsl:element>
  	</xsl:template>
  
  	<xsl:template match="html:dt">
      <xsl:element name="li">
        <xsl:apply-templates select="* | text()"/>        
      </xsl:element>
  	</xsl:template>
  
  	<xsl:template match="html:dd">
      <xsl:element name="ul">
        <xsl:apply-templates select="* | text()"/> 
      </xsl:element>
  	</xsl:template>



	<!-- Replace obsolete align/valign attribute with class="align" -->
	<xsl:template match="@align[contains(.,'left')]">
	  <xsl:attribute name="class">
	    <xsl:value-of select="'align_left'"/>
	  </xsl:attribute>
	</xsl:template>
	<xsl:template match="@valign[contains(.,'top')]">
	  <xsl:attribute name="class">
	    <xsl:value-of select="'vertical_align_top'"/>
	  </xsl:attribute>
	</xsl:template>
	
	

</xsl:stylesheet>